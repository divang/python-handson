Python Dictionaries

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

A dictionary is a collection which is ordered*, changeable and do not allow duplicates.

Dictionary Items
print(thisdict["brand"])

Dictionary Length
print(len(thisdict))

Dictionary Items - Data Types
thisdict = {
  "brand": "Ford",
  "electric": False,
  "year": 1964,
  "colors": ["red", "white", "blue"]
}

Get value
x = thisdict["model"]
x = thisdict.get("model")

Get Keys
x = thisdict.keys()

Get Values
x = thisdict.values()

Get Items
The items() method will return each item in a dictionary, as tuples in a list.
x = thisdict.items()

Change Values
thisdict["year"] = 2018

Update Dictionary
thisdict.update({"year": 2020})

Removing Items
thisdict.pop("model")

The popitem() method removes the last inserted item (in versions before 3.7, a random item is removed instead):
thisdict.popitem()


The del keyword removes the item with the specified key name:
del thisdict["model"]

The del keyword can also delete the dictionary completely:
del thisdict

The clear() method empties the dictionary:
thisdict.clear()

Loop Through a Dictionary
When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.

for x in thisdict:
  print(x)


Print all values in the dictionary, one by one:
for x in thisdict:
  print(thisdict[x])

You can also use the values() method to return values of a dictionary:
for x in thisdict.values():
  print(x)

You can use the keys() method to return the keys of a dictionary:
for x in thisdict.keys():
  print(x)

** Loop through both keys and values, by using the items() method:
for x, y in thisdict.items():
  print(x, y)

Copy a Dictionary
mydict = thisdict.copy()

Make a copy of a dictionary with the dict() function:
mydict = dict(thisdict)

** Nested Dictionaries
First way:
myfamily = {
  "child1" : {
    "name" : "Emil",
    "year" : 2004
  },
  "child2" : {
    "name" : "Tobias",
    "year" : 2007
  },
  "child3" : {
    "name" : "Linus",
    "year" : 2011
  }
}

Second way:
child1 = {
  "name" : "Emil",
  "year" : 2004
}
child2 = {
  "name" : "Tobias",
  "year" : 2007
}
child3 = {
  "name" : "Linus",
  "year" : 2011
}

myfamily = {
  "child1" : child1,
  "child2" : child2,
  "child3" : child3
}





