Python Loops
Python has two primitive loop commands:

while loops
for loops

>>>
i = 1
while i < 6:
  print(i)
  i += 1


The break Statement
i = 1
while i < 6:
  print(i)
  if i == 3:
    break
  i += 1

The continue Statement
i = 0
while i < 6:
  i += 1
  if i == 3:
    continue
  print(i)


The else Statement
With the else statement we can run a block of code once when the condition no longer is true:

i = 1
while i < 6:
  print(i)
  i += 1
else:
  print("i is no longer less than 6")

      
# For loop 
# List
>>>
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)

Looping Through a String
>>>
for x in "banana":
  print(x)

Break
>>>
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  if x == "banana":
    break  

Continue
>>>
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    continue
  print(x)


The range() Function
To loop through a set of code a specified number of times, we can use the range() function,
The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and ends at a specified number.

for x in range(6):
  print(x)


Increment the sequence with 3 (default is 1):

for x in range(2, 30, 3):
  print(x)

Nested Loops
>>>
adj = ["red", "big", "tasty"]
fruits = ["apple", "banana", "cherry"]

for x in adj:
  for y in fruits:
    print(x, y)  

